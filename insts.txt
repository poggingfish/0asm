i = Instruction with no arg
ia = Instructon with arg

ia0 - Load next integer to stack
i1 - Pops and prints top stack item
i2 - Pops and prints the top stack item as a char. (MUST BE INT)
ia3 - Create a label
ia4 - Jump to a label
ia5 - Puts top of stack into a "memory" location
ia6 - Puts a "memory" location onto the top of the stack
i7 - Swaps top two stack items
i8 - Puts 1 on the stack if the top two stack items are equal, 0 if not
ia9 - Jump if the top item is 1
ia10 - Jump if the top item is 0
i11 - Duplicate top stack item
i12 - Checks if the top stack item is greater than the top-1 stack item, 1 if true, 0 if not. (You can mix this with i8 to get a greater or eq, or less than or equal operator.)
i13 - Push current location to call stack, takes an offset from the top of the stack
i14 - Jump to top of call stack, if empty jump to 0
ia15 - Allocate memory to a string name (similar to a variable.)
ia16 - Deallocate memory initialized with ia15
Math operations start with an "m"
i17 / m+ - Plus
i18 / m- - Minus
i19 / m* - Mulitply
120 / m/ - Divide
i21 - Take one character from stdin
i22 - Flushes file
i23 - Opens file from fd
i24 - Puts a single character in a file
i25 - Puts a string in a file
i26 - closes a file
i27 - Opens a file from a string
i28 - Checks if the top value is a nullptr
i29 - Exits program with an exit code
i30 - Moves data from stack to stack2
i31 - Moves data from stack2 to stack